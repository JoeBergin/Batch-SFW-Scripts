{
  "title": "Why Do This",
  "journal": [
    {
      "id": "eba1fe3efca92775",
      "type": "create",
      "item": {
        "title": "Why Do This"
      }
    },
    {
      "id": "4fa66f6b383186cd",
      "type": "add",
      "item": {
        "id": "4fa66f6b383186cd",
        "type": "factory"
      }
    },
    {
      "id": "4fa66f6b383186cd",
      "type": "edit",
      "item": {
        "text": "First, note that I, myself, don't always use Polymorphism to solve every problem of [[Selection]], though I use it quite a lot. It is just a skill, like any other, but one that you should be able to use if you program in an Object-Oriented language, such as Java or Python. ",
        "id": "4fa66f6b383186cd",
        "type": "paragraph"
      }
    },
    {
      "after": "4fa66f6b383186cd",
      "id": "bb19f66eb5aa31eb",
      "type": "add",
      "item": {
        "id": "bb19f66eb5aa31eb",
        "type": "factory"
      }
    },
    {
      "id": "bb19f66eb5aa31eb",
      "type": "edit",
      "item": {
        "text": "Polymorphism can help you achieve very low cyclomatic complexity in a program. This is, in general a good thing as it makes reading and understanding the program easy if you limit yourself to a microscopic level, as you need to do when updating or maintaining a program. ",
        "id": "bb19f66eb5aa31eb",
        "type": "paragraph"
      }
    },
    {
      "after": "bb19f66eb5aa31eb",
      "id": "3eb9996a8219838a",
      "type": "add",
      "item": {
        "id": "3eb9996a8219838a",
        "type": "factory"
      }
    },
    {
      "id": "3eb9996a8219838a",
      "type": "edit",
      "item": {
        "text": "But even if you intend to use it sparingly, you need to quickly recognize occurrences in which it applies, and quickly see the consequences of applying a polymorphic solution versus an ad-hoc one. This, sadly, is lacking in many programmers, even those who consider themselves \"experts\" in OO. ",
        "id": "3eb9996a8219838a",
        "type": "paragraph"
      }
    },
    {
      "after": "3eb9996a8219838a",
      "id": "f66f9d112ee7dcc5",
      "type": "add",
      "item": {
        "id": "f66f9d112ee7dcc5",
        "type": "factory"
      }
    },
    {
      "id": "f66f9d112ee7dcc5",
      "type": "edit",
      "item": {
        "text": "So, one reason to do this is just for the practice. ",
        "id": "f66f9d112ee7dcc5",
        "type": "paragraph"
      }
    },
    {
      "id": "f66f9d112ee7dcc5",
      "type": "edit",
      "item": {
        "text": "So, one reason to do this is just for the practice. [[Joe Bergin]] has learned that instructors have a difficult time teaching polymorphism and too many instructors have abandoned the attempt. In the past he, along with Eugene Wallingford have issued the \"Polymorphism Challenge\" which is to attempt to write some standard bit of code without any if or switch statements (or at least a minimal number). The purpose is really just for purposes of skill building so that the one taking up the challenge learns to better use his or her tools.",
        "id": "f66f9d112ee7dcc5",
        "type": "paragraph"
      }
    },
    {
      "after": "f66f9d112ee7dcc5",
      "id": "4d1dc89270378f84",
      "type": "add",
      "item": {
        "id": "4d1dc89270378f84",
        "type": "factory"
      }
    },
    {
      "id": "4d1dc89270378f84",
      "type": "remove"
    },
    {
      "after": "f66f9d112ee7dcc5",
      "id": "666b503c7e0090cc",
      "type": "add",
      "item": {
        "id": "666b503c7e0090cc",
        "type": "factory"
      }
    },
    {
      "id": "666b503c7e0090cc",
      "type": "edit",
      "item": {
        "text": "This was based on Joe's \"Polymorphism Etude\" paper (unpublished), which makes the same point. </p>\n\n<p>Later on, the Anti-If Campaign came along and was joined by some pretty impressive actors: Kent Beck among them. </p>\n\n<p>Joe maintains that Polymorphic Programming if done well can result in beautiful programs. The essay explains a bit of the How, the Why, and the Consequences. ",
        "id": "666b503c7e0090cc",
        "type": "paragraph"
      }
    },
    {
      "id": "666b503c7e0090cc",
      "type": "edit",
      "item": {
        "text": "This was based on Joe's \"Polymorphism Etude\" paper (unpublished), which makes the same point. \n\nLater on, the Anti-If Campaign came along and was joined by some pretty impressive actors: Kent Beck among them. \n\nJoe maintains that Polymorphic Programming if done well can result in beautiful programs. The essay explains a bit of the How, the Why, and the Consequences. ",
        "id": "666b503c7e0090cc",
        "type": "paragraph"
      }
    },
    {
      "id": "666b503c7e0090cc",
      "type": "edit",
      "item": {
        "text": "This was based on Joe's \"Polymorphism Etude\" paper (unpublished), which makes the same point. \n\nLater on, the [http://www.antiifcampaign.com/ Anti-If Campaign] came along and was joined by some pretty impressive actors: Kent Beck among them. \n\nJoe maintains that Polymorphic Programming if done well can result in beautiful programs. The essay explains a bit of the How, the Why, and the Consequences. ",
        "id": "666b503c7e0090cc",
        "type": "paragraph"
      }
    },
    {
      "after": "666b503c7e0090cc",
      "id": "a4cd8891595d6299",
      "type": "add",
      "item": {
        "id": "a4cd8891595d6299",
        "type": "factory"
      }
    },
    {
      "id": "666b503c7e0090cc",
      "type": "edit",
      "item": {
        "text": "This was based on Joe's \"Polymorphism Etude\" paper (unpublished), which makes the same point. \n\nLater on, the [http://www.antiifcampaign.com/ Anti-If Campaign] came along and was joined by some pretty impressive actors: Kent Beck among them. \n\nJoe maintains that Polymorphic Programming if done well can result in beautiful programs. The essay explains a bit of the How, the Why, and the [[Consequences]]. ",
        "id": "666b503c7e0090cc",
        "type": "paragraph"
      }
    },
    {
      "id": "a4cd8891595d6299",
      "type": "remove"
    }
  ],
  "story": [
    {
      "text": "First, note that I, myself, don't always use Polymorphism to solve every problem of [[Selection]], though I use it quite a lot. It is just a skill, like any other, but one that you should be able to use if you program in an Object-Oriented language, such as Java or Python. ",
      "id": "4fa66f6b383186cd",
      "type": "paragraph"
    },
    {
      "text": "Polymorphism can help you achieve very low cyclomatic complexity in a program. This is, in general a good thing as it makes reading and understanding the program easy if you limit yourself to a microscopic level, as you need to do when updating or maintaining a program. ",
      "id": "bb19f66eb5aa31eb",
      "type": "paragraph"
    },
    {
      "text": "But even if you intend to use it sparingly, you need to quickly recognize occurrences in which it applies, and quickly see the consequences of applying a polymorphic solution versus an ad-hoc one. This, sadly, is lacking in many programmers, even those who consider themselves \"experts\" in OO. ",
      "id": "3eb9996a8219838a",
      "type": "paragraph"
    },
    {
      "text": "So, one reason to do this is just for the practice. [[Gilly Gil]] has learned that instructors have a difficult time teaching polymorphism and too many instructors have abandoned the attempt. In the past he, along with Eugene Wallingford have issued the \"Polymorphism Challenge\" which is to attempt to write some standard bit of code without any if or switch statements (or at least a minimal number). The purpose is really just for purposes of skill building so that the one taking up the challenge learns to better use his or her tools.",
      "id": "f66f9d112ee7dcc5",
      "type": "paragraph"
    },
    {
      "text": "This was based on Joe's \"Polymorphism Etude\" paper (unpublished), which makes the same point. \n\nLater on, the [http://www.antiifcampaign.com/ Anti-If Campaign] came along and was joined by some pretty impressive actors: Kent Beck among them. \n\nJoe maintains that Polymorphic Programming if done well can result in beautiful programs. The essay explains a bit of the How, the Why, and the [[Consequences]]. ",
      "id": "666b503c7e0090cc",
      "type": "paragraph"
    }
  ]
}